name: Rust

on:
  push:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-20.04]
    steps:
    - uses: actions/checkout@v2
    - uses: fwilhe2/setup-kotlin@main
      with:
        version: 1.4.30
        install-native: false

    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Install
      run: cargo install --path .

    - run: localcirunner azure.yaml
      working-directory: test_data

    # - name: Check if compiled binary exists
    #   run: |
    #       val f = java.io.File("test_data/a.out")
    #       if (!f.exists()) {
    #         throw RuntimeException("expected output file does not exist")
    #       }
    #       f.delete()
    #   shell: kotlin -howtorun .main.kts {0}

    - run: localcirunner gh.yaml
      working-directory: test_data

    # - name: Check if compiled binary exists
    #   run: |
    #     val f = java.io.File("test_data/a.out")
    #     if (!f.exists()) {
    #       throw RuntimeException("expected output file does not exist")
    #     }
    #     f.delete()
    #   shell: kotlin -howtorun .main.kts {0}

    - name: Build
      run: cargo build --release --verbose

#    - name: Upload release binary
#      uses: actions/upload-release-asset@v1.0.2
#      env:
#        GITHUB_TOKEN: ${{ github.token }}
#      with:
#        upload_url: "https://uploads.github.com/repos/fwilhe2/localcirunner/releases/37758047/assets{?name,label}"
#        asset_path: ./target/release/localcirunner
#        asset_name: localcirunner
#        asset_content_type: application/octet-stream

    # - name: Run example
    #   run: cargo run azure.yaml --verbose

    # - name: Run example
    #   run: cargo run gh.yaml --verbose
